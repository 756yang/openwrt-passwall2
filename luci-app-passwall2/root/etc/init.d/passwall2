#!/bin/sh /etc/rc.common

START=99
STOP=15

CONFIG=passwall2
APP_FILE=/usr/share/${CONFIG}/app.sh
LOCK_FILE_DIR=/var/lock
LOCK_FILE=${LOCK_FILE_DIR}/${CONFIG}.lock

set_lock() {
	[ ! -d "$LOCK_FILE_DIR" ] && mkdir -p $LOCK_FILE_DIR
	exec 999>"$LOCK_FILE"
	flock -xn 999
}

unset_lock() {
	flock -u 999
	rm -rf "$LOCK_FILE"
}

unlock() {
	failcount=1
	while [ "$failcount" -le 10 ]; do
		if [ -f "$LOCK_FILE" ]; then
			let "failcount++"
			sleep 1s
			[ "$failcount" -ge 10 ] && unset_lock
		else
			break
		fi
	done
}

boot() {
	local delay=$(uci -q get ${CONFIG}.@global_delay[0].start_delay || echo 1)
	if [ "$delay" -gt 0 ]; then
		$APP_FILE echolog "执行启动延时 $delay 秒后再启动!"
		sleep $delay
	fi
	local current_pwd=$(pwd)
	mkdir -p /tmp/share/v2ray
	cd /tmp/share/v2ray
	mkdir -p geoip geosite
	opkg update >/dev/null
	cd geoip && opkg download v2ray-geoip >/dev/null && cd ..
	cd geosite && opkg download v2ray-geosite >/dev/null && cd ..
	tar -xvzf geoip/*.ipk -C geoip >/dev/null
	tar -xvzf geoip/data.tar.gz -C geoip >/dev/null
	mv geoip/usr/share/v2ray/geoip.dat geoip.dat
	tar -xvzf geosite/*.ipk -C geosite >/dev/null
	tar -xvzf geosite/data.tar.gz -C geosite >/dev/null
	mv geosite/usr/share/v2ray/geosite.dat geosite.dat
	rm -rf geoip geosite
	cd "$current_pwd"
	restart
	wget https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/refs/heads/release/geoip.dat -qO /tmp/share/v2ray/geoip.dat
	wget https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/refs/heads/release/geosite.dat -qO /tmp/share/v2ray/geosite.dat
	restart
	touch ${LOCK_FILE_DIR}/${CONFIG}_ready.lock
}

start() {
	set_lock
	[ $? == 1 ] && $APP_FILE echolog "脚本已经在运行，不重复运行，退出." && exit 0
	$APP_FILE start
	unset_lock
}

stop() {
	unlock
	set_lock
	[ $? == 1 ] && $APP_FILE echolog "停止脚本等待超时，不重复运行，退出." && exit 0
	$APP_FILE stop
	unset_lock
}

restart() {
	set_lock
	[ $? == 1 ] && $APP_FILE echolog "脚本已经在运行，不重复运行，退出." && exit 0
	$APP_FILE stop
	$APP_FILE start
	unset_lock
}
